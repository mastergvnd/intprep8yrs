import com.essbase.api.base.EssException;
import com.essbase.api.base.IEssBaseObject;
import com.essbase.api.datasource.IEssCube;
import com.essbase.api.datasource.IEssOlapApplication;
import com.essbase.api.datasource.IEssOlapServer;
import com.essbase.api.domain.IEssDomain;
import com.essbase.api.metadata.IEssCubeOutline;
import com.essbase.api.metadata.IEssMember;
import com.essbase.api.session.IEssbase;

public class RenameMember {

    private static final String USER_NAME = "epm_default_cloud_admin";
    private static final String USER_PWD = "welcome1";
    private static final String ESSBASE_SERVER = "slc15rvo.us.oracle.com:14231";

    private static final String ESSBASE_MODE = "Embedded";

	public static void main(String[] args) {
		IEssbase essbaseHome = null;
        IEssOlapServer olapSvr = null;
        IEssOlapApplication app = null;
        IEssCube cube = null;
        try {
            essbaseHome = IEssbase.Home.create(IEssbase.JAPI_VERSION);
            final IEssDomain essbaseDomain = essbaseHome.signOn(USER_NAME, USER_PWD, false, null, ESSBASE_MODE);

            olapSvr = (IEssOlapServer)essbaseDomain.getOlapServer(ESSBASE_SERVER);
            olapSvr.connect();
            
            app = olapSvr.getApplication("HSP_TEMP_OTL_IMPORT_APP");
            System.out.println("Application name : " + app.getName());
            cube = app.getCube("Hari");
            System.out.println("Cube name : " + cube.getName());
            IEssCubeOutline outline =  cube.openOutline();
            outline.getCube().setActive();
            System.out.println("Name of the outline : " + outline.getName());
            
            IEssMember periodMember = outline.findMember("Period");
            IEssBaseObject[] members =  periodMember.getChildMembers().getAll();
            for (int i = 0 ; i<members.length; i++) {
                IEssMember member = (IEssMember) members[i];
                if(member != null) {
                    if("YearTotal".equalsIgnoreCase(member.getName())) {
                        member.rename("HSP_" + member.getName());
                        outline.save();
                        break;
                    }
                }
            }
            
            periodMember = outline.findMember("Period");
            members =  periodMember.getChildMembers().getAll();
            for (int i = 0 ; i<members.length; i++) {
                IEssMember member = (IEssMember) members[i];
                if(member != null) {
                   System.out.println("Name of the member : " + member.getName());
                }
            }
            
            System.out.println("Done");
        } catch (EssException x) {
            x.printStackTrace();
        } finally {
            try {
                if (olapSvr != null && olapSvr.isConnected() == true)
                    olapSvr.disconnect();
            } catch (EssException x) {
                //Ignored
            }

            try {
                if (essbaseHome != null && essbaseHome.isSignedOn() == true)
                    essbaseHome.signOff();
            } catch (EssException x) {
                //Ignored
            }
        }
	}
}

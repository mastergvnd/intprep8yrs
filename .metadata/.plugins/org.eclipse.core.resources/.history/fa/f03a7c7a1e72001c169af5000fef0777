package paypal;

import java.util.AbstractMap;
import java.util.Comparator;
import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;
import java.util.PriorityQueue;

public class _B26ReorganizeString {

	public static void main(String[] args) {

		String str = "aabcdbaabde";
		System.out.println(reorganizeString(str));
//		q.add(new AbstractMap.SimpleEntry<Character, Integer>('B', 2));
	}

	public static String reorganizeString(String s) {
		final Map<Character, Integer> frequencies = getCharFrequency(s);
		System.out.println(frequencies);
		PriorityQueue<Character> maxHeap = new PriorityQueue<>(
				new Comparator<Character>() {
					public int compare(Character arg0, Character arg1) {
						return frequencies.get(arg1) - frequencies.get(arg0);
					}
		});
		maxHeap.addAll(frequencies.keySet());
		while(!maxHeap.isEmpty())
			System.out.println(maxHeap.poll());
		StringBuilder sb = new StringBuilder(s.length());

		while(!maxHeap.isEmpty()) {
			Character current = maxHeap.poll();
			Character next = maxHeap.poll();
			sb.append(current);
			sb.append(next);
			frequencies.put(current.getKey(), current.getValue() - 1);
			frequencies.put(next.getKey(), next.getValue() - 1);
			if(frequencies.get(current.getKey()) > 0)
				maxHeap.add(frequencies.);
		}
		return null;
	}

	private static Map<Character, Integer> getCharFrequency(String s) {
		Map<Character, Integer> frequencies = new HashMap<Character, Integer>();
		for(char c : s.toCharArray())
			frequencies.put(c, frequencies.getOrDefault(c, 0) + 1);
		return frequencies;
	}
}
